[{"/home/franklin/Coding/pickyourfruit/frontend/src/index.js":"1","/home/franklin/Coding/pickyourfruit/frontend/src/App.js":"2","/home/franklin/Coding/pickyourfruit/frontend/src/reportWebVitals.js":"3","/home/franklin/Coding/pickyourfruit/frontend/src/components/Navbar.js":"4","/home/franklin/Coding/pickyourfruit/frontend/src/components/Contact.js":"5","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/HomeScreen.js":"6","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/ProductScreen.js":"7","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/CartScreen.js":"8","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/store.js":"9","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/rootReducer.js":"10","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-reducer.js":"11","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-types.js":"12","/home/franklin/Coding/pickyourfruit/frontend/src/components/Product.js":"13","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-actions.js":"14","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/InfoProduct.js":"15","/home/franklin/Coding/pickyourfruit/frontend/src/components/CartItem.js":"16","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/CheckoutScreen.js":"17","/home/franklin/Coding/pickyourfruit/frontend/src/components/NavigationMenu.js":"18","/home/franklin/Coding/pickyourfruit/frontend/src/components/orderNumbers.js":"19"},{"size":727,"mtime":1612893950364,"results":"20","hashOfConfig":"21"},{"size":1477,"mtime":1614093615968,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1612867895865,"results":"23","hashOfConfig":"21"},{"size":1641,"mtime":1614093027820,"results":"24","hashOfConfig":"21"},{"size":1691,"mtime":1626767439257,"results":"25","hashOfConfig":"21"},{"size":471,"mtime":1612891104193,"results":"26","hashOfConfig":"21"},{"size":466,"mtime":1626713503852,"results":"27","hashOfConfig":"21"},{"size":1331,"mtime":1626713571229,"results":"28","hashOfConfig":"21"},{"size":219,"mtime":1612893950340,"results":"29","hashOfConfig":"21"},{"size":183,"mtime":1612893950340,"results":"30","hashOfConfig":"21"},{"size":3773,"mtime":1626513307869,"results":"31","hashOfConfig":"21"},{"size":183,"mtime":1612894093409,"results":"32","hashOfConfig":"21"},{"size":1277,"mtime":1614084645857,"results":"33","hashOfConfig":"21"},{"size":672,"mtime":1612894569606,"results":"34","hashOfConfig":"21"},{"size":1936,"mtime":1626788499586,"results":"35","hashOfConfig":"21"},{"size":1511,"mtime":1613851668747,"results":"36","hashOfConfig":"21"},{"size":7290,"mtime":1626788416284,"results":"37","hashOfConfig":"21"},{"size":665,"mtime":1614093643789,"results":"38","hashOfConfig":"21"},{"size":64,"mtime":1626516090685,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1cvyv96",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/franklin/Coding/pickyourfruit/frontend/src/index.js",[],["83","84"],"/home/franklin/Coding/pickyourfruit/frontend/src/App.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/reportWebVitals.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/Navbar.js",["85"],"import './Navbar.css'\nimport {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nfunction Navbar({cart, changeShow}){\n\n    const [qtyInCart, setQtyInCart] = useState('')\n\n    useEffect(() => {\n        let sum = 0;\n        let items = 0\n        cart.forEach((item) => {\n            items += item.qty;\n            sum += items*item.qty\n        }\n            )\n        setQtyInCart(items)\n    },[cart, qtyInCart])\n\n    return(\n        <div className='navbar'>\n            \n            <Link to='/'>\n                <h2 className='navbar-logo'>\n                    PickYourFruit\n                </h2>\n            </Link>\n\n            <div className='hamburger-menu' onClick={() => changeShow()}>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n            \n            <div className='navbar-components'>\n                \n                <Link to='/products'>\n                    <h2>Products</h2>\n                </Link>\n                \n                <Link to='contact'>\n                    <h2>Contact us</h2>\n                </Link>\n                \n                <Link to='/cart'>\n                    <h2> <span id='navbar-cart-span'>Cart: </span>\n                        <span id='qtyInCart'>\n                            <span>{qtyInCart}</span>\n                        </span>\n                    </h2>\n                </Link>\n            \n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cart: state.shop.cart\n    }\n}\n\nexport default connect (mapStateToProps) (Navbar)","/home/franklin/Coding/pickyourfruit/frontend/src/components/Contact.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/HomeScreen.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/ProductScreen.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/CartScreen.js",["86"],"import './CartScreen.css'\nimport {connect} from 'react-redux'\nimport CartItem from '../CartItem'\nimport {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction CartScreen({cart}){\n\n    const [totalPrice, setTotalPrice] = useState('')\n\n    useEffect(() => {\n        let total = 0;\n        cart.forEach(item => total += item.qty*item.price);\n        setTotalPrice(total)\n    })\n\n    return(\n        <div>\n            {cart.length ===0 ?\n            \n            <div className='zero-cart'>\n                <h1>You don't have any item in your cart</h1>\n                <Link to='/products'>\n                    <button>Search for products</button>\n                </Link>\n            </div>\n        : \n        <div className='cartscreen'>\n            <div className='cart-items'>\n                {cart.map(item => <CartItem data={item} key={item.id}/>)}\n            </div>\n            <div className='summary'>\n                <h2 className='cart-total'>TOTAL: Â£ {totalPrice}</h2>\n                <Link to='/checkout'>\n                    <button>Proceed to checkout</button>\n                </Link>\n            </div>\n        </div>\n    }       \n    </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        cart: state.shop.cart\n    }\n}\n\nexport default connect (mapStateToProps)(CartScreen)","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/store.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/rootReducer.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-reducer.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-types.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/Product.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-actions.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/InfoProduct.js",["87"],"import './InfoProduct.css'\nimport {connect} from 'react-redux'\nimport { addToCart, loadCurrentItem } from '../redux/Shopping/shopping-actions'\nimport {Link} from 'react-router-dom'\n\nfunction InfoProduct({currentItem, products, addToCart, loadCurrentItem}){\n    return(\n        <div className='info-product'>\n            <div className='each-item'>\n                <img src={currentItem.imageUrl} alt={currentItem.name}/>\n                <div className='info-right'>\n                    <h2 className='info-name'>{currentItem.name}</h2>\n                    <h2 className='info-description'>{currentItem.description}</h2>\n                    <h2 className='info-price'>Â£{currentItem.description_price}</h2>\n                    <button onClick={() => addToCart(currentItem.id)}>Add to cart</button>\n                </div>\n            </div>\n            \n            <div className='other-products'>\n                <h1>Other fruits you may want to try:</h1>\n                <div className='other-fruits'>\n                    {products.filter(item => item.id !== currentItem.id).map(item => <div className='other-fruits-item' key={item.id}>\n                        <Link to={`/products/${item.id}`}>\n                            <img className='other-products-img' src={item.imageUrl} onClick={() => loadCurrentItem(item)}/>\n                        </Link>\n                        <h2>{item.name}</h2>\n                        <h3>Â£{item.price}</h3>\n                    </div>)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentItem: state.shop.currentItem,\n        products: state.shop.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addToCart: (id) => dispatch(addToCart(id)),\n        loadCurrentItem: (data) => dispatch(loadCurrentItem(data))\n    }\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps)(InfoProduct)","/home/franklin/Coding/pickyourfruit/frontend/src/components/CartItem.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/CheckoutScreen.js",["88"],"import './CheckoutScreen.css'\nimport {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport orderNumbers from '../orderNumbers'\nimport * as emailjs from 'emailjs-com'\nimport env from 'react-dotenv'\n\nfunction Checkout({cart}){\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [street, setStreet] = useState('')\n    const [number, setNumber] = useState('')\n    const [zipCode, setZipCode] = useState('')\n    const [cardHolder, setCardHolder] = useState('')\n    const [cardNumber, setCardNumber] = useState('')\n    const [expiry, setExpiry] = useState(new Date())\n    const [cvv, setCvv] = useState('')\n\n    const [qtyInCart, setQtyInCart] = useState('')\n    const [totalSum, setTotalSum] = useState('')\n\n    const [paymentSuccessful, setPaymentSuccessful] = useState(false)\n    const [orderNumber, setOrderNumber] = useState(null)\n\n    useEffect(() => {\n        let sum = 0;\n        let items = 0\n        cart.forEach((item) => {\n            items += item.qty;\n            sum += item.qty*item.price\n        }\n            )\n        setQtyInCart(items);\n        setTotalSum(sum)\n    },[cart, qtyInCart])\n\n    \n    const paymentProcessment = (e) => {\n        e.preventDefault()        \n        \n        let newOrderNumber = function(){\n            let max=99999999\n            let min=10000000\n            function generate(max, min){\n                return Math.floor(Math.random()*(max-min))+min\n            }\n            let chosenNumber = generate(max, min)\n            \n            for (let i=0; i<=orderNumbers.length; i++){\n                if (i === orderNumbers.length){return chosenNumber}\n                if (chosenNumber === orderNumbers[i]){newOrderNumber()}\n            }\n        }\n\n        let generateOrderNumber = newOrderNumber()\n\n        setOrderNumber(generateOrderNumber)\n        \n        emailjs.sendForm('gmail', 'template_mudydw2', e.target,'user_ei2HwlX5HUA6Vb2BoNWPR', {\n            order_number: \"12\",\n            email: email,\n            name: name\n        }).then((result) => {\n            setPaymentSuccessful(true)\n            console.log(result)\n        }, (error) => {\n            console.log(error)\n        })\n\n    }\n        \n\n    return(\n        <div>\n            {cart.length ===0 ? \n            \n            <div className='zero-cart'>\n                <h1>You don't have any item in your cart</h1>\n                <Link to='/products'>\n                    <button>Search for products</button>\n                </Link>\n            </div>\n            : \n            \n            <div>\n                {\n                    paymentSuccessful ? \n                    \n                    <div className='payment-successful'>\n                        <h1 id='payment-successful-title'>Your payment was successful</h1>\n                        <h2>Your order number is <span style={{fontSize:32}}>{orderNumber}</span></h2>\n                        <h2 style={{margin:10}}>We sent you an email with the order number and delivering \n                            information. Thank you for choosing us\n                        </h2>\n                    </div>\n                    :\n                    <div>\n                        <div className='checkout'>\n                    <form onSubmit={(e)=>paymentProcessment(e)}>  \n                        <div className='personal-info'>\n                            {/* full name, cellphone, email, house street, house number, zip code */}\n                            <h1>Personal information</h1>\n                            <div className='name'>\n                                <label>Name: </label>\n                                <input type='text' name='name' onChange={(e) => setName(e.target.value)} value={name}/>\n                            </div>\n                            <div className='email'>\n                                <label>Email: </label>\n                                <input type='email' name='email' onChange={(e) => setEmail(e.target.value)} value={email}/>\n                            </div>\n                            <div className='house-street'>\n                                <label>House street: </label>\n                                <input type='text' onChange={(e) => setStreet(e.target.value)} value={street}/>\n                            </div>\n                            <div className='house-number'>\n                                <label>House number: </label>\n                                <input type='number' onChange={(e) => setNumber(e.target.value)} value={number}/>\n                            </div>\n                            <div className='zip-code'>\n                                <label>Zip code: </label>\n                                <input type='number' onChange={(e) => setZipCode(e.target.value)} value={zipCode}/>\n                            </div>\n                        </div>\n\n                        <div className='card-info'>\n                        {/* Card holder, card number, expiry date, CVV */}\n                            <h1>Card information</h1>\n                            <div className='card-holder'>\n                                <label>Card holder: </label>\n                                <input type='text' onChange={(e) => setCardHolder(e.target.value)} value={cardHolder}/>\n                            </div>\n                            <div className='card-number'>\n                                <label>Card number: </label>\n                                <input type='number' onChange={(e) => setCardNumber(e.target.value)} value={cardNumber}/>\n                            </div>\n                            <div className='expiry'>\n                                <label>Expiry date: </label>\n                                <input type='number' onChange={(e) => setExpiry(e.target.value)} value={expiry}/>\n                            </div>\n                            <div className='cvv'>\n                                <label>CVV: </label>\n                                <input type='number' onChange={(e) => setCvv(e.target.value)} value={cvv}/>\n                            </div> \n                        </div>\n                        <div className='summary-button'>\n                            <button type='submit' id='summary-button'>Pay now</button>\n                        </div> \n                </form>\n\n                <div className='summary-and-pay'>\n                    <div className='checkout-summary'>\n                        <h2 id='summary-title'>CHECKOUT SUMMARY</h2>\n                        {cart.map(item => {\n                            return <div className='summary-item' key={item.id}>\n                                <h3>{item.name} x {item.qty}</h3>\n                                <h3 id='item-price'>Â£{item.price*item.qty}</h3>\n                            </div>\n                        })}\n                    </div>\n                    <h2 id='summary-total'>Total: Â£{totalSum}</h2>\n                </div>\n        </div>\n                    </div>\n                }\n            </div>\n\n            }\n        \n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        cart: state.shop.cart\n    }\n}\n\nexport default connect (mapStateToProps) (Checkout)","/home/franklin/Coding/pickyourfruit/frontend/src/components/NavigationMenu.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/orderNumbers.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":15,"column":13,"nodeType":"95","messageId":"96","endLine":15,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":11,"column":5,"nodeType":"95","endLine":11,"endColumn":14,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":24,"column":29,"nodeType":"102","endLine":24,"endColumn":124},{"ruleId":"93","severity":1,"message":"103","line":7,"column":8,"nodeType":"95","messageId":"96","endLine":7,"endColumn":11},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'sum' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTotalPrice'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cart] as a second argument to the useEffect Hook.",["106"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'env' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Add dependencies array: [cart]",{"range":"109","text":"110"},[401,401],", [cart]"]