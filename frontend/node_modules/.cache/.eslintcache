[{"/home/franklin/Coding/pickyourfruit/frontend/src/index.js":"1","/home/franklin/Coding/pickyourfruit/frontend/src/App.js":"2","/home/franklin/Coding/pickyourfruit/frontend/src/reportWebVitals.js":"3","/home/franklin/Coding/pickyourfruit/frontend/src/components/Navbar.js":"4","/home/franklin/Coding/pickyourfruit/frontend/src/components/Contact.js":"5","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/HomeScreen.js":"6","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/ProductScreen.js":"7","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/CartScreen.js":"8","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/store.js":"9","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/rootReducer.js":"10","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-reducer.js":"11","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-types.js":"12","/home/franklin/Coding/pickyourfruit/frontend/src/components/Product.js":"13","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-actions.js":"14","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/InfoProduct.js":"15","/home/franklin/Coding/pickyourfruit/frontend/src/components/CartItem.js":"16","/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/CheckoutScreen.js":"17","/home/franklin/Coding/pickyourfruit/frontend/src/components/NavigationMenu.js":"18"},{"size":727,"mtime":1612893950364,"results":"19","hashOfConfig":"20"},{"size":1477,"mtime":1614093615968,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1612867895865,"results":"22","hashOfConfig":"20"},{"size":1641,"mtime":1614093027820,"results":"23","hashOfConfig":"20"},{"size":2430,"mtime":1614189879926,"results":"24","hashOfConfig":"20"},{"size":471,"mtime":1612891104193,"results":"25","hashOfConfig":"20"},{"size":452,"mtime":1613051508672,"results":"26","hashOfConfig":"20"},{"size":1317,"mtime":1614019743280,"results":"27","hashOfConfig":"20"},{"size":219,"mtime":1612893950340,"results":"28","hashOfConfig":"20"},{"size":183,"mtime":1612893950340,"results":"29","hashOfConfig":"20"},{"size":3840,"mtime":1613305235091,"results":"30","hashOfConfig":"20"},{"size":183,"mtime":1612894093409,"results":"31","hashOfConfig":"20"},{"size":1277,"mtime":1614084645857,"results":"32","hashOfConfig":"20"},{"size":672,"mtime":1612894569606,"results":"33","hashOfConfig":"20"},{"size":1816,"mtime":1613056087665,"results":"34","hashOfConfig":"20"},{"size":1511,"mtime":1613851668747,"results":"35","hashOfConfig":"20"},{"size":5514,"mtime":1614172184237,"results":"36","hashOfConfig":"20"},{"size":665,"mtime":1614093643789,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1cvyv96",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/franklin/Coding/pickyourfruit/frontend/src/index.js",[],["79","80"],"/home/franklin/Coding/pickyourfruit/frontend/src/App.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/reportWebVitals.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/Navbar.js",["81"],"import './Navbar.css'\nimport {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nfunction Navbar({cart, changeShow}){\n\n    const [qtyInCart, setQtyInCart] = useState('')\n\n    useEffect(() => {\n        let sum = 0;\n        let items = 0\n        cart.forEach((item) => {\n            items += item.qty;\n            sum += items*item.qty\n        }\n            )\n        setQtyInCart(items)\n    },[cart, qtyInCart])\n\n    return(\n        <div className='navbar'>\n            \n            <Link to='/'>\n                <h2 className='navbar-logo'>\n                    PickYourFruit\n                </h2>\n            </Link>\n\n            <div className='hamburger-menu' onClick={() => changeShow()}>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n            \n            <div className='navbar-components'>\n                \n                <Link to='/products'>\n                    <h2>Products</h2>\n                </Link>\n                \n                <Link to='contact'>\n                    <h2>Contact us</h2>\n                </Link>\n                \n                <Link to='/cart'>\n                    <h2> <span id='navbar-cart-span'>Cart: </span>\n                        <span id='qtyInCart'>\n                            <span>{qtyInCart}</span>\n                        </span>\n                    </h2>\n                </Link>\n            \n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        cart: state.shop.cart\n    }\n}\n\nexport default connect (mapStateToProps) (Navbar)","/home/franklin/Coding/pickyourfruit/frontend/src/components/Contact.js",["82","83"],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/HomeScreen.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/ProductScreen.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/CartScreen.js",["84"],"import './CartScreen.css'\nimport {connect} from 'react-redux'\nimport CartItem from '../CartItem'\nimport {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\n\nfunction CartScreen({cart}){\n\n    const [totalPrice, setTotalPrice] = useState('')\n\n    useEffect(() => {\n        let total = 0;\n        cart.forEach(item => total += item.qty*item.price);\n        setTotalPrice(total)\n    })\n\n    return(\n        <div>\n            {cart.length ===0 ?\n            \n            <div className='zero-cart'>\n                <h1>You don't have any item in your cart</h1>\n                <Link to='/products'>\n                    <button>Search for products</button>\n                </Link>\n            </div>\n        : \n        <div className='cartscreen'>\n            <div className='cart-items'>\n                {cart.map(item => <CartItem data={item}/>)}\n            </div>\n            <div className='summary'>\n                <h2 className='cart-total'>TOTAL: Â£ {totalPrice}</h2>\n                <Link to='/checkout'>\n                    <button>Proceed to checkout</button>\n                </Link>\n            </div>\n        </div>\n    }       \n    </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        cart: state.shop.cart\n    }\n}\n\nexport default connect (mapStateToProps)(CartScreen)","/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/store.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/rootReducer.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-reducer.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-types.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/Product.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/redux/Shopping/shopping-actions.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/InfoProduct.js",["85"],"import './InfoProduct.css'\nimport {connect} from 'react-redux'\nimport { addToCart, loadCurrentItem } from '../redux/Shopping/shopping-actions'\nimport {Link} from 'react-router-dom'\n\nfunction InfoProduct({currentItem, products, addToCart, loadCurrentItem}){\n    return(\n        <div className='info-product'>\n            <div className='each-item'>\n                <img src={currentItem.imageUrl} alt={currentItem.name}/>\n                <div className='info-right'>\n                    <h2 className='info-name'>{currentItem.name}</h2>\n                    <h2 className='info-description'>{currentItem.description}</h2>\n                    <h2 className='info-price'>Â£{currentItem.description_price}</h2>\n                    <button onClick={() => addToCart(currentItem.id)}>Add to cart</button>\n                </div>\n            </div>\n            \n            <div className='other-products'>\n                <h1>Other fruits you may want to try:</h1>\n                <div className='other-fruits'>\n                    {products.filter(item => item.id !== currentItem.id).map(item => <div className='item'>\n                        <Link to={`/products/${item.id}`}>\n                            <img className='other-products-img' src={item.imageUrl} onClick={() => loadCurrentItem(item)}/>\n                        </Link>\n                    </div>)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentItem: state.shop.currentItem,\n        products: state.shop.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addToCart: (id) => dispatch(addToCart(id)),\n        loadCurrentItem: (data) => dispatch(loadCurrentItem(data))\n    }\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps)(InfoProduct)","/home/franklin/Coding/pickyourfruit/frontend/src/components/CartItem.js",[],"/home/franklin/Coding/pickyourfruit/frontend/src/components/screen/CheckoutScreen.js",["86","87","88","89","90","91","92","93","94","95","96","97"],"import './CheckoutScreen.css'\nimport {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\n\nfunction Checkout({cart}){\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone, setPhone] = useState('')\n    const [street, setStreet] = useState('')\n    const [number, setNumber] = useState('')\n    const [zipCode, setZipCode] = useState('')\n    const [city, setCity] = useState('')\n    const [cardHolder, setCardHolder] = useState('')\n    const [cardNumber, setCardNumber] = useState('')\n    const [expiry, setExpiry] = useState(new Date())\n    const [cvv, setCvv] = useState('')\n\n    const [qtyInCart, setQtyInCart] = useState('')\n    const [totalSum, setTotalSum] = useState('')\n\n    useEffect(() => {\n        let sum = 0;\n        let items = 0\n        cart.forEach((item) => {\n            items += item.qty;\n            sum += item.qty*item.price\n        }\n            )\n        setQtyInCart(items);\n        setTotalSum(sum)\n    },[cart, qtyInCart])\n\n    const onChangeName = (e) => {\n        setName(e.target.value)\n    }\n\n    const onChangeEmail = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const onChangePhone = (e) => {\n        setPhone(e.target.value)\n    }\n\n    const onChangeStreet = (e) => {\n        setStreet(e.target.value)\n    }\n\n    const onChangeNumber = (e) => {\n        setNumber(e.target.value)\n    }\n\n    const onChangeZipCode = (e) => {\n        setZipCode(e.target.value)\n    }\n\n    const onChangeCardHolder = (e) => {\n        setCardHolder(e.target.value)\n    }\n\n    const onChangeCardNumber = (e) => {\n        setCardNumber(e.target.value)\n    }\n\n    const onChangeExpiry = (e) => {\n        setExpiry(e.target.value)\n    }\n\n    const onChangeCvv = (e) => {\n        setCvv(e.target.value)\n    }\n\n    return(\n        <div>\n            {cart.length ===0 ? \n            \n            <div className='zero-cart'>\n                <h1>You don't have any item in your cart</h1>\n                <Link to='/products'>\n                    <button>Search for products</button>\n                </Link>\n            </div>\n            : \n            <div className='checkout'>\n                <div className='personal-info'>\n                <form>\n                    {/* full name, cellphone, email, house street, house number, zip code */}\n                    <h1>Personal information</h1>\n                    <div className='name'>\n                        <label>Name:</label>\n                        <input type='text' onChange={onChangeName}/>\n                    </div>\n                    <div className='phone'>\n                        <label>Phone:</label>\n                        <input type='tel' onChange={onChangePhone}/>\n                    </div>\n                    <div className='email'>\n                        <label>Email:</label>\n                        <input type='email' onChangeName={onChangeEmail}/>\n                    </div>\n                    <div className='house-street'>\n                        <label>House street:</label>\n                        <input type='text' onChangeName={onChangeStreet}/>\n                    </div>\n                    <div className='house-number'>\n                        <label>House number:</label>\n                        <input type='number' onChangeName={onChangeNumber}/>\n                    </div>\n                    <div className='zip-code'>\n                        <label>Zip code:</label>\n                        <input type='number' onChangeName={onChangeZipCode}/>\n                    </div>\n                </form>\n            </div>\n            \n            <div className='card-info'>\n                {/* Card holder, card number, expiry date, CVV */}\n                <form>\n                    <h1>Card information</h1>\n                    <div className='card-holder'>\n                        <label>Card holder:</label>\n                        <input type='text' onChangeName={onChangeCardHolder}/>\n                    </div>\n                    <div className='card-number'>\n                        <label>Card number:</label>\n                        <input type='number' onChangeName={onChangeCardNumber}/>\n                    </div>\n                    <div className='expiry'>\n                        <label>Expiry date:</label>\n                        <input type='number' onChangeName={onChangeExpiry}/>\n                    </div>\n                    <div className='cvv'>\n                        <label>CVV:</label>\n                        <input type='number' onChangeName={onChangeCvv}/>\n                    </div>\n                </form>\n            \n                <div className='summary-and-pay'>\n                    <div className='checkout-summary'>\n                        <h2 id='summary-title'>Chechout summary</h2>\n                        {cart.map(item => {\n                            return <div className='summary-item'>\n                                <h3>{item.name} : Â£{item.description_price}</h3>\n                                <h4>qty: {item.qty}</h4>\n                            </div>\n                        })}\n                    </div>\n                    <h2 id='summary-total'>Total: Â£{totalSum}</h2>\n                    <button>Pay now</button>\n                </div>\n            </div>\n        </div>}\n        \n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        cart: state.shop.cart\n    }\n}\n\nexport default connect (mapStateToProps) (Checkout)","/home/franklin/Coding/pickyourfruit/frontend/src/components/NavigationMenu.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":15,"column":13,"nodeType":"104","messageId":"105","endLine":15,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":56,"column":38,"nodeType":"108","messageId":"109","endLine":56,"endColumn":40},{"ruleId":"106","severity":1,"message":"107","line":60,"column":43,"nodeType":"108","messageId":"109","endLine":60,"endColumn":45},{"ruleId":"110","severity":1,"message":"111","line":11,"column":5,"nodeType":"104","endLine":11,"endColumn":14,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":24,"column":29,"nodeType":"115","endLine":24,"endColumn":124},{"ruleId":"102","severity":1,"message":"116","line":8,"column":12,"nodeType":"104","messageId":"105","endLine":8,"endColumn":16},{"ruleId":"102","severity":1,"message":"117","line":9,"column":12,"nodeType":"104","messageId":"105","endLine":9,"endColumn":17},{"ruleId":"102","severity":1,"message":"118","line":10,"column":12,"nodeType":"104","messageId":"105","endLine":10,"endColumn":17},{"ruleId":"102","severity":1,"message":"119","line":11,"column":12,"nodeType":"104","messageId":"105","endLine":11,"endColumn":18},{"ruleId":"102","severity":1,"message":"120","line":12,"column":12,"nodeType":"104","messageId":"105","endLine":12,"endColumn":18},{"ruleId":"102","severity":1,"message":"121","line":13,"column":12,"nodeType":"104","messageId":"105","endLine":13,"endColumn":19},{"ruleId":"102","severity":1,"message":"122","line":14,"column":12,"nodeType":"104","messageId":"105","endLine":14,"endColumn":16},{"ruleId":"102","severity":1,"message":"123","line":14,"column":18,"nodeType":"104","messageId":"105","endLine":14,"endColumn":25},{"ruleId":"102","severity":1,"message":"124","line":15,"column":12,"nodeType":"104","messageId":"105","endLine":15,"endColumn":22},{"ruleId":"102","severity":1,"message":"125","line":16,"column":12,"nodeType":"104","messageId":"105","endLine":16,"endColumn":22},{"ruleId":"102","severity":1,"message":"126","line":17,"column":12,"nodeType":"104","messageId":"105","endLine":17,"endColumn":18},{"ruleId":"102","severity":1,"message":"127","line":18,"column":12,"nodeType":"104","messageId":"105","endLine":18,"endColumn":15},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'sum' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTotalPrice'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [cart] as a second argument to the useEffect Hook.",["130"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'phone' is assigned a value but never used.","'street' is assigned a value but never used.","'number' is assigned a value but never used.","'zipCode' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'cardHolder' is assigned a value but never used.","'cardNumber' is assigned a value but never used.","'expiry' is assigned a value but never used.","'cvv' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Add dependencies array: [cart]",{"range":"133","text":"134"},[401,401],", [cart]"]