{"ast":null,"code":"import'./InfoProduct.css';import{connect}from'react-redux';import{addToCart as _addToCart,loadCurrentItem as _loadCurrentItem}from'../redux/Shopping/shopping-actions';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InfoProduct(_ref){var currentItem=_ref.currentItem,products=_ref.products,addToCart=_ref.addToCart,loadCurrentItem=_ref.loadCurrentItem;return/*#__PURE__*/_jsxs(\"div\",{className:\"info-product\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"each-item\",children:[/*#__PURE__*/_jsx(\"img\",{src:currentItem.imageUrl,alt:currentItem.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-right\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"info-name\",children:currentItem.name}),/*#__PURE__*/_jsx(\"h2\",{className:\"info-description\",children:currentItem.description}),/*#__PURE__*/_jsxs(\"h2\",{className:\"info-price\",children:[\"\\xA3\",currentItem.description_price]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return addToCart(currentItem.id);},children:\"Add to cart\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"other-products\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Other fruits you may want to try:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"other-fruits\",children:products.filter(function(item){return item.id!==currentItem.id;}).map(function(item){return/*#__PURE__*/_jsxs(\"div\",{className:\"other-fruits-item\",children:[/*#__PURE__*/_jsx(Link,{to:\"/products/\".concat(item.id),children:/*#__PURE__*/_jsx(\"img\",{className:\"other-products-img\",src:item.imageUrl,onClick:function onClick(){return loadCurrentItem(item);}})}),/*#__PURE__*/_jsx(\"h2\",{children:item.name}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\xA3\",item.price]})]},item.id);})})]})]});}var mapStateToProps=function mapStateToProps(state){return{currentItem:state.shop.currentItem,products:state.shop.products};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addToCart:function addToCart(id){return dispatch(_addToCart(id));},loadCurrentItem:function loadCurrentItem(data){return dispatch(_loadCurrentItem(data));}};};export default connect(mapStateToProps,mapDispatchToProps)(InfoProduct);","map":{"version":3,"sources":["/home/franklin/Coding/PickYourFruit-main/frontend/src/components/screen/InfoProduct.js"],"names":["connect","addToCart","loadCurrentItem","Link","InfoProduct","currentItem","products","imageUrl","name","description","description_price","id","filter","item","map","price","mapStateToProps","state","shop","mapDispatchToProps","dispatch","data"],"mappings":"AAAA,MAAO,mBAAP,CACA,OAAQA,OAAR,KAAsB,aAAtB,CACA,OAASC,SAAS,GAATA,CAAAA,UAAT,CAAoBC,eAAe,GAAfA,CAAAA,gBAApB,KAA2C,oCAA3C,CACA,OAAQC,IAAR,KAAmB,kBAAnB,C,wFAEA,QAASC,CAAAA,WAAT,MAAyE,IAAnDC,CAAAA,WAAmD,MAAnDA,WAAmD,CAAtCC,QAAsC,MAAtCA,QAAsC,CAA5BL,SAA4B,MAA5BA,SAA4B,CAAjBC,eAAiB,MAAjBA,eAAiB,CACrE,mBACI,aAAK,SAAS,CAAC,cAAf,wBACI,aAAK,SAAS,CAAC,WAAf,wBACI,YAAK,GAAG,CAAEG,WAAW,CAACE,QAAtB,CAAgC,GAAG,CAAEF,WAAW,CAACG,IAAjD,EADJ,cAEI,aAAK,SAAS,CAAC,YAAf,wBACI,WAAI,SAAS,CAAC,WAAd,UAA2BH,WAAW,CAACG,IAAvC,EADJ,cAEI,WAAI,SAAS,CAAC,kBAAd,UAAkCH,WAAW,CAACI,WAA9C,EAFJ,cAGI,YAAI,SAAS,CAAC,YAAd,kBAA6BJ,WAAW,CAACK,iBAAzC,GAHJ,cAII,eAAQ,OAAO,CAAE,yBAAMT,CAAAA,SAAS,CAACI,WAAW,CAACM,EAAb,CAAf,EAAjB,yBAJJ,GAFJ,GADJ,cAWI,aAAK,SAAS,CAAC,gBAAf,wBACI,yDADJ,cAEI,YAAK,SAAS,CAAC,cAAf,UACKL,QAAQ,CAACM,MAAT,CAAgB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACF,EAAL,GAAYN,WAAW,CAACM,EAA5B,EAApB,EAAoDG,GAApD,CAAwD,SAAAD,IAAI,qBAAI,aAAK,SAAS,CAAC,mBAAf,wBAC7D,KAAC,IAAD,EAAM,EAAE,qBAAeA,IAAI,CAACF,EAApB,CAAR,uBACI,YAAK,SAAS,CAAC,oBAAf,CAAoC,GAAG,CAAEE,IAAI,CAACN,QAA9C,CAAwD,OAAO,CAAE,yBAAML,CAAAA,eAAe,CAACW,IAAD,CAArB,EAAjE,EADJ,EAD6D,cAI7D,oBAAKA,IAAI,CAACL,IAAV,EAJ6D,cAK7D,6BAAMK,IAAI,CAACE,KAAX,GAL6D,GAAwCF,IAAI,CAACF,EAA7C,CAAJ,EAA5D,CADL,EAFJ,GAXJ,GADJ,CA0BH,CAED,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAO,CACHZ,WAAW,CAAEY,KAAK,CAACC,IAAN,CAAWb,WADrB,CAEHC,QAAQ,CAAEW,KAAK,CAACC,IAAN,CAAWZ,QAFlB,CAAP,CAIH,CALD,CAOA,GAAMa,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACnC,MAAO,CACHnB,SAAS,CAAE,mBAACU,EAAD,QAAQS,CAAAA,QAAQ,CAACnB,UAAS,CAACU,EAAD,CAAV,CAAhB,EADR,CAEHT,eAAe,CAAE,yBAACmB,IAAD,QAAUD,CAAAA,QAAQ,CAAClB,gBAAe,CAACmB,IAAD,CAAhB,CAAlB,EAFd,CAAP,CAIH,CALD,CAOA,cAAerB,CAAAA,OAAO,CAAEgB,eAAF,CAAmBG,kBAAnB,CAAP,CAA8Cf,WAA9C,CAAf","sourcesContent":["import './InfoProduct.css'\nimport {connect} from 'react-redux'\nimport { addToCart, loadCurrentItem } from '../redux/Shopping/shopping-actions'\nimport {Link} from 'react-router-dom'\n\nfunction InfoProduct({currentItem, products, addToCart, loadCurrentItem}){\n    return(\n        <div className='info-product'>\n            <div className='each-item'>\n                <img src={currentItem.imageUrl} alt={currentItem.name}/>\n                <div className='info-right'>\n                    <h2 className='info-name'>{currentItem.name}</h2>\n                    <h2 className='info-description'>{currentItem.description}</h2>\n                    <h2 className='info-price'>£{currentItem.description_price}</h2>\n                    <button onClick={() => addToCart(currentItem.id)}>Add to cart</button>\n                </div>\n            </div>\n            \n            <div className='other-products'>\n                <h1>Other fruits you may want to try:</h1>\n                <div className='other-fruits'>\n                    {products.filter(item => item.id !== currentItem.id).map(item => <div className='other-fruits-item' key={item.id}>\n                        <Link to={`/products/${item.id}`}>\n                            <img className='other-products-img' src={item.imageUrl} onClick={() => loadCurrentItem(item)}/>\n                        </Link>\n                        <h2>{item.name}</h2>\n                        <h3>£{item.price}</h3>\n                    </div>)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentItem: state.shop.currentItem,\n        products: state.shop.products\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addToCart: (id) => dispatch(addToCart(id)),\n        loadCurrentItem: (data) => dispatch(loadCurrentItem(data))\n    }\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps)(InfoProduct)"]},"metadata":{},"sourceType":"module"}